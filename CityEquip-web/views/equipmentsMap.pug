extends layout

block content
  .container-fluid.my-4
    .d-flex.justify-content-between.align-items-center.mb-1
      h2.mb-0 Equipment Map
      button#sidebarToggle.btn.btn-outline-dark(type="button") â˜° Filter by Type

    // --- SIDEBAR A DESTRA ---
    #sidebar
      .sidebar-header
        h4 Filter by Type
        button#closeSidebar.btn-close(type="button")
      ul.sidebar-list
        li.mt-2
          a.sidebar-link(href="/map") Show All
        each item in types
          li.d-flex.justify-content-between.align-items-center.mb-1
            a.sidebar-link(href=`/map?type=${item.type}`)= item.type
            if item.count
              span.badge.bg-primary.ms-2 #{item.count}

    if selectedType
      p.text-muted.mb-3 Showing equipments of type:
        strong.text-dark  #{selectedType}
    else 
      .mb-3

    // --- MAP CONTAINER ---
    #mapContainer(style="width:100%; height:75vh; border-radius:8px; box-shadow:0 2px 10px rgba(0,0,0,0.15);")

  // --- SCRIPT ---
  script(src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js")
  script.
    document.addEventListener('DOMContentLoaded', () => {
      const equipments = !{JSON.stringify(equipments)};
      const map = L.map('mapContainer').setView([41.12, 1.25], 14);

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; OpenStreetMap contributors'
      }).addTo(map);

      equipments.forEach(eq => {
        if (eq.latitude && eq.longitude) {
          const marker = L.marker([eq.latitude, eq.longitude]).addTo(map);
          const popup = `
            <strong>${eq.name}</strong><br>
            ${eq.type || 'Type not specified'}<br>
            ${eq.location || ''}<br>
            ${eq.municipal && eq.municipal.toLowerCase() === 'yes' ? '<span class="badge bg-secondary">Municipal</span>' : ''}
            <br><a href="/equipment/${eq._id}">View details</a>
          `;
          marker.bindPopup(popup);
        }
      });

      // Sidebar logic
      const sidebar = document.getElementById('sidebar');
      const toggle = document.getElementById('sidebarToggle');
      const closeBtn = document.getElementById('closeSidebar');
      if (toggle && sidebar) toggle.addEventListener('click', () => sidebar.classList.toggle('active'));
      if (closeBtn) closeBtn.addEventListener('click', () => sidebar.classList.remove('active'));
      document.addEventListener('click', e => {
        if (sidebar.classList.contains('active') && !sidebar.contains(e.target) && e.target.id !== 'sidebarToggle') {
          sidebar.classList.remove('active');
        }
      });
    });
